// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace MySite.Models;

public partial class resumeContext : DbContext
{
    public resumeContext(DbContextOptions<resumeContext> options)
        : base(options)
    {
    }

    public virtual DbSet<ResumeContact> ResumeContacts { get; set; }

    public virtual DbSet<ResumeContent> ResumeContents { get; set; }

    public virtual DbSet<ResumeLifestage> ResumeLifestages { get; set; }

    public virtual DbSet<ResumeLogin> ResumeLogins { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<ResumeContact>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("resume_contact_pkey");

            entity.ToTable("resume_contact");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .HasColumnName("email");
            entity.Property(e => e.Nachricht).HasColumnName("nachricht");
            entity.Property(e => e.Name)
                .HasMaxLength(100)
                .HasColumnName("name");
            entity.Property(e => e.Timestamp).HasColumnType("timestamp without time zone");
        });

        modelBuilder.Entity<ResumeContent>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("resume_content_pkey");

            entity.ToTable("resume_content");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Company)
                .HasMaxLength(100)
                .HasDefaultValueSql("NULL::character varying")
                .HasColumnName("company");
            entity.Property(e => e.DateFrom).HasColumnName("date_from");
            entity.Property(e => e.DateTill).HasColumnName("date_till");
            entity.Property(e => e.FullText).HasColumnName("full_text");
            entity.Property(e => e.IdRl).HasColumnName("id_rl");
            entity.Property(e => e.Place)
                .HasMaxLength(40)
                .HasDefaultValueSql("NULL::character varying")
                .HasColumnName("place");
            entity.Property(e => e.PositionTitle)
                .HasMaxLength(100)
                .HasDefaultValueSql("NULL::character varying")
                .HasColumnName("position_title");
        });

        modelBuilder.Entity<ResumeLifestage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("resume_lifestage_pkey");

            entity.ToTable("resume_lifestage");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.LifestageTitle)
                .HasMaxLength(40)
                .HasColumnName("lifestage_title");
            entity.Property(e => e.Order).HasColumnName("order");
        });

        modelBuilder.Entity<ResumeLogin>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("resume_login_pkey");

            entity.ToTable("resume_login");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Pwhash)
                .HasMaxLength(100)
                .HasColumnName("pwhash");
            entity.Property(e => e.Username)
                .HasMaxLength(100)
                .HasColumnName("username");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}